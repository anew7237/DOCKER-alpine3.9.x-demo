user nginx husers;

worker_processes auto;
worker_rlimit_nofile 4096;
thread_pool default threads=32 max_queue=65536;

pid /run/nginx.pid;
error_log /dev/stderr info;

include /etc/nginx/modules/*.conf;
pcre_jit on;

events {
    worker_connections 4096;
    multi_accept off;
    accept_mutex off;
}

http {
    #aio threads; (default)
    aio threads=default;

    # Fix broken uploads
    client_body_buffer_size 16k;
    client_body_in_file_only off;
    client_body_in_single_buffer off;

    # Don't tell nginx version to clients.
    server_tokens off;

    include mime.types;
    default_type application/octet-stream;
    charset utf-8;

    client_max_body_size 1024m;
    keepalive_requests 20000;
    keepalive_timeout 120;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 5;
    gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

    # Enable checking the existence of precompressed files.
    gzip_static off;

    disable_symlinks off;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  logs/access.log  main;
    #log_format kubernetes $time_local ' Nginx:  From: ' $http_x_forwarded_for ' Request: ' $request_method ' ' $http_x_forwarded_proto '://' $host $request_uri ' Response: HTTP Code: ' $status ' Bytes Sent: ' $bytes_sent ' Time: ' $request_time;
    #access_log /dev/stdout kubernetes;

    include /etc/nginx/conf.d/*.conf;
}
